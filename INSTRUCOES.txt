A entrega do programa será através do Google
Classroom e consiste da devolução de todos os arquivos referentes ao código-fonte, um
Makefile e um arquivo README que documente a utilização do programa. Todos os
arquivos serão avaliados.

Escreva um programa que leia linhas de texto de um arquivo *.txt e encontre as palavras
mais utilizadas, assim como as sequências de duas ou mais palavras consecutivas mais
utilizadas. Caso haja alguma pontuação entre as sequências de palavras, essa construção
não deve ser contabilizada. Considere que o arquivo *.txt já existe no mesmo diretório do
programa executável. Este arquivo pode trazer um texto como o abaixo:
Essa frase é um exemplo e, a partir dessa frase, espera-se que o exercício fique
claro. Essa frase tem pontuação. Todas as construções de palavras consecutivas
com pontuação devem ser excluídas.

Modele o problema como um grafo assimétrico, onde os vértices são as palavras e as
arestas são formadas entre pares de palavras que aparecem de forma consecutiva na
frase. As arestas podem ser ponderadas com peso igual ao número de aparições no texto.
Ao final, um grafo como o representado na figura abaixo, relativo ao texto do exemplo, será
modelado. Percebe-se pelo grafo abaixo que a aresta formada entre as palavras “essa” e
“frase” é a de maior destaque, assim como o rótulo dos vértices referentes às palavras
“frase” e “pontuação”. Isso indica que tanto a sequência “essa frase”, quanto as palavras
“frase” e “pontuação” foram as mais utilizadas no texto.

O programa implementa o grafo como uma classe. Da mesma forma, as arestas e os
vértices também são implementados como classes. A classe Grafo possui um método de
inserção de arestas, enquanto a classe aresta possui um método construtor que define os
seus vértices de origem e de destino. Os vértices e arestas podem ser criados conforme o
texto é lido. Ainda, a classe Grafo possui um método que retorna o vértice mais utilizado,
assim como a sequência de N arestas mais comum, ou seja, a sequência cuja soma dos
pesos das arestas é maior. Dessa forma, pede-se a implementação de um programa que
responda as seguintes perguntas:

1. Qual é(são) a(s) palavra(s) mais utilizada(s) no texto?

2. Qual(is) é(são) a(s) sequência(s) de N palavras consecutivas mais utilizada(s) no
texto (uma opção para a solução do problema é abstrair o conceito de aresta para
uma estrutura formada por N vértices em sequência ao invés de apenas dois, como
feito tradicionalmente)?

Observação 1: Não é necessário produzir uma figura como a apresentada no enunciado.
A figura é apenas ilustrativa.

Observação 2: Use textos pequenos com apenas um parágrafo